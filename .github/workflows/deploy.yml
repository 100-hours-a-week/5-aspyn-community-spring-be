name: Deploy Backend to EC2

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 자동 실행

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # GitHub 저장소의 코드 가져오기
      - name: Checkout repository
        uses: actions/checkout@v3

      # GitHub Container Registry (GHCR) 로그인
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_OWNER }} --password-stdin

      # Docker 이미지 빌드 후 GHCR에 푸시
      - name: Build & Push Docker Image
        run: |
          # 최신 Docker 이미지 태그 설정
          IMAGE_NAME=ghcr.io/${{ secrets.GHCR_OWNER }}/chalcak-be-container:latest
          
          # Docker 이미지 빌드
          docker build -t $IMAGE_NAME .

          # GHCR에 Docker 이미지 푸시
          docker push $IMAGE_NAME

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push # build-and-push 작업이 완료된 후 실행

    steps:
      # SSH 키를 GitHub Actions 서버에 저장하고 권한을 설정함 (600 권한: 본인만 접근 가능)
      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # EC2 서버를 "신뢰할 수 있는 호스트" 목록에 추가하여 SSH 접속 시 확인 메시지를 방지함
      - name: Add EC2 to known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # SSH를 통해 EC2에 접속하여 필요한 배포 작업을 순차적으로 실행함
      - name: Deploy to EC2 via SSH
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          
          # 환경 변수 설정
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> /home/ubuntu/chalcak/be/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> /home/ubuntu/chalcak/be/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> /home/ubuntu/chalcak/be/.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> /home/ubuntu/chalcak/be/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> /home/ubuntu/chalcak/be/.env
      
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> /home/ubuntu/chalcak/be/.env
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> /home/ubuntu/chalcak/be/.env
          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> /home/ubuntu/chalcak/be/.env
          echo "CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}" >> /home/ubuntu/chalcak/be/.env
          EOL
          
          # 최신 Docker 이미지 가져오기
          docker pull ghcr.io/${{ secrets.GHCR_OWNER }}/chalcak-be-container:latest
          
          # 기존 컨테이너 중지 및 삭제
          cd /home/ubuntu/chalcak/be
          docker-compose down
          
          # 새 컨테이너 실행
          docker-compose up -d
          
          EOF

